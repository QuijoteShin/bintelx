# snippets/upstreams.conf
# controled dns e.g cloudflare, google or custom
resolver 127.0.0.1 172.24.168.52 valid=30s;
# incorporating HTTP/3 (QUIC), HTTP/2, SSL, and backend proxying.
upstream bintelx_front  {
  zone bintelx_front_shm 64k;
  server localhost:8080;
  server localhost:8080 resolve max_fails=1 fail_timeout=1; # bintelx node.js server is listening on for signaling.
  server localhost:8081 backup;
}
# Upstream for the API backend, supporting PHP (primary & backup) and Python (fallback).
upstream api_backend {
  server unix:/run/php/php8.4-fpm.sock;
}
# Upstream SSE,WS
upstream stream_backend {
  zone bintelx_front_shm 64k;
  server 127.0.0.1:8000; # max_fails=2 fail_timeout=30s; # Python ASGI backend (Hypercorn/FastAPI/Uvicorn/Starlette)
  #server 192.168.1.11:9000 weight=5; backup; # Replace with your backup PHP-FPM server IP and port
}
# Upstream for the dedicated WebRTC signaling server (webrtc-rs)
upstream webrtc_signaling_server {
  zone bintelx_front_shm 64k;
  server 127.0.0.1:9000;
}